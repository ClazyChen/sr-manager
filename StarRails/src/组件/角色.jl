include("进度.jl")
include("角色模板.jl")

# 进场之后的角色，包括当前的状态以及角色的属性
# 注意角色的技能很可能和角色模板之间有区别（由于星级影响得到了强化）
mutable struct 角色{模板类型 <: 角色模板}
    模板::模板类型   # 所属的角色模板，用于确定是否是某一个角色
    名称::String
    生命::进度      # 生命 / 生命上限
    能量::进度      # 能量 / 能量上限
    韧性::进度      # 韧性 / 韧性上限
    攻击::Int
    防御::Int
    速度::Int
    效果命中::Int
    效果抵抗::Int
    暴击::Int
    穿甲::Int
    存活::Bool

    队伍::标签.队伍
    位置::Int

    技能列表::Vector{Any}
    状态列表::Vector{Any}

    # 通过角色模板生成一个角色实例
    function 角色(; 模板::模板类型, 队伍::标签.队伍, 位置::Int) where {模板类型} 
        new{模板类型}(模板, 模板.名称,
            进度(当前 = 模板.生命 * 10, 上限 = 模板.生命 * 10, 放大十倍 = true), 
            进度(当前 = 模板.能量.当前, 上限 = 模板.能量.上限), 
            进度(当前 = 常数.默认韧性值, 上限 = 常数.默认韧性值), 
            模板.攻击, 模板.防御, 模板.速度, 模板.命中, 模板.抵抗, 模板.暴击, 模板.穿甲, 
            true, 队伍, 位置, [], [])
    end
end

初始化技能!(角色::角色, 模板::角色模板) = nothing
初始化技能!(角色::角色) = 初始化技能!(角色, 角色.模板)

行动间隔(角色::角色) = min(max(常数.速度极限 - 角色.速度, 常数.速度极限 - 常数.速度上限), 常数.速度极限)

# 当速度相同时，按照蓝1 -> 红1 -> 蓝2 -> 红2 -> ... 的顺序行动
function 行动次序(角色::角色)
    if 角色.队伍 == 红方
        return 角色.位置 * 2
    elseif 角色.队伍 == 蓝方
        return 角色.位置 * 2 - 1
    else   # 中立方（召唤物）
        return 角色.位置 + 100
    end
end

function Base.show(io::IO, 角色::角色)
    if 角色.队伍 == 红方
        print(io, @红 "$(角色.名称)")
    elseif 角色.队伍 == 蓝方
        print(io, @青 "$(角色.名称)")
    else
        print(io, @黄 "$(角色.名称)")
    end
end